{"name":"JML","body":"## Getting started\r\nInstall via NPM...\r\n\r\n```\r\n$ npm install jml\r\n```\r\n\r\n... or add script to your web page.\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"/path/to/jml.js\"></script>\r\n```\r\n\r\n## Simple usage\r\n\r\n```javascript\r\njml.render([['div.container',\r\n  ['a.link', {_href: 'http://tenphi.com'}, 'Link text'],\r\n  ['img.image', {_src: '/myphoto.jpg', _alt: '', width: '100px'}]\r\n]]);\r\n```\r\n\r\noutput (with beautifying):\r\n\r\n```html\r\n<div class=\"container\">\r\n  <a class=\"link\" href=\"http://tenphi.com\">Link text</a>\r\n  <img class=\"image\" src=\"/myphoto.jpg\" alt=\"\" style=\"width: 100px;\" />\r\n</div>\r\n```\r\n\r\n## Render container\r\nParameters order is strict:\r\n\r\n* tag name\r\n* id\r\n* classes\r\n\r\nExample: `['a#id.class.second-class']`\r\n\r\n### Alternative declaration\r\nDeclaration of tag properties can be object:\r\n\r\n```javascript\r\njml.render([[{\r\n  tag: 'a',\r\n  id: 'link',\r\n  classes: 'link-class'\r\n}, {\r\n  _href: 'http://tenphi.com'\r\n}, 'Link']]);\r\n```\r\n\r\n## Options for render\r\nRender function can accept options:\r\n\r\n```javascript\r\nvar link = [function() {\r\n  return ['a', {_href: this.url}].concat(this.body);\r\n}];\r\nvar options = {\r\n  url: 'http://tenphi.com',\r\n  body: 'Link Text'\r\n};\r\njml.render([link], options);\r\n```\r\n\r\n## Advanced usage with Templates\r\nAdd template:\r\n\r\n```javascript\r\njml.view('Link', ['a', {_href: 'url'}, 'Link Text']);\r\n```\r\n\r\nthen render it:\r\n\r\n```javascript\r\njml.render([['div.container', ['Link']]]);\r\n```\r\n\r\n### Template options\r\nRewrite template:\r\n\r\n```javascript\r\njml.view('Link', [function() {\r\n  return ['a', {_href: this.url}].concat(this.body);\r\n}]);\r\n```\r\n\r\nand render it with options:\r\n\r\n```javascript\r\njml.render([['div.container', ['Link', {\r\n  url: 'http://tenphi.com',\r\n  body: 'Link Text'\r\n}]]]);\r\n```\r\n\r\n## JML Tools\r\nThere are several function-tools for JML:\r\n\r\n* `jml.prop(name)` - return property `name`\r\n\r\n```javascript\r\nvar template = [['a', {_href: 'http://tenphi.com'}, jml.prop('content')]];\r\njml.render(template, {content: 'Link Text'});\r\n```\r\n\r\n* `jml.map(name, handler)` - return result of map function on property `name`\r\n\r\n```javascript\r\nvar head = [['head',\r\n  ['title', 'Title of Site'], \r\n  jml.map('styles', function(file) {\r\n    return [['link', {\r\n      _rel: 'stylesheet',\r\n      _type: 'text/css',\r\n      _href: file\r\n    }]];\r\n  })\r\n]];\r\njml.render(head, {styles: ['reset.css', 'main.css']});\r\n```\r\n\r\n* `jml.filter(name1, name2, ...)` - return options object without properties that not listed\r\n\r\n```javascript\r\nvar template = [['div', jml.filter('width', 'height'), jml.prop('content')]];\r\njml.render(template, {\r\n  width: '100px',\r\n  height: '100px',\r\n  content: 'Content Text'\r\n});\r\n```","tagline":"HTML template engine based on native Javascript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}